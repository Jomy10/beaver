#!/usr/bin/env ruby
require 'beaver'

class ArgumentParser
  def collect
    if ARGV[0] == nil
      @clargs = [:help]
    else
      @clargs = ARGV
    end
  end
  
  def args
    return @clargs
  end
end

class BeaverCLI
  def initialize(arguments)
    @args = arguments
  end
  
  def exec
    case @args[0].to_sym
    when :help
      puts %{usage: \e[32mbeaver\e[0m \e[33m[command] [args]\e[0m
  \e[32minit\e[0m \e[33m[name]\e[0m
    Initialize a new beaver project with an optional \e[33mname\e[0m for the beaver file.
        }
    when :init
      if (@args[1] != nil)
        @_init_beaverFileName = @args[1]
      else
        @_init_beaverFileName = "make"
      end
      self._init
    end
  end
  
  def _init
    # gitignore file
    openType = nil
    if File.file?(".gitignore")
      openType = 'a'
    else
      openType = 'w'
    end

    File.open(".gitignore", openType) do |f|
      if openType == 'a'
        f << "\n"
      end
      f.puts ".beaver"
    end
    
    # Make beaver file
    contents = %{#!/usr/bin/env ruby
require 'beaver'

command :example do
  puts "Hello Beaver!"
end

$beaver.end}
    
    File.open("#{@_init_beaverFileName}.rb", "w") do |f|
      f.write contents
    end
    
    system "chmod +x #{@_init_beaverFileName}.rb"
    
    puts "New Beaver project initialized."
  end
end

arg_parser = ArgumentParser.new
arg_parser.collect
cli = BeaverCLI.new(arg_parser.args)
cli.exec
